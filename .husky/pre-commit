#!/usr/bin/env sh

echo "ü§ñ Validando commit..."

# Verificar se arquivos de ambiente de PRODU√á√ÉO est√£o sendo commitados
if git diff --cached --name-only | grep -qE "\.env\.(production|prod|staging)"; then
  echo "‚ùå ERRO: Tentativa de commitar arquivo de ambiente de PRODU√á√ÉO"
  echo "Arquivos .env.production, .env.prod e .env.staging N√ÉO devem ser commitados"
  echo "Use .env.development ou .env.local para configura√ß√µes de desenvolvimento"
  exit 1
fi

# Verificar se .env.production.local est√° sendo commitado
if git diff --cached --name-only | grep -q "\.env\.production\.local"; then
  echo "‚ùå ERRO: Tentativa de commitar arquivo .env.production.local"
  echo "Arquivos de produ√ß√£o N√ÉO devem ser commitados"
  exit 1
fi

# PERMITIR: .env.development, .env.local, .env.test (s√£o seguros para commit)
# Mensagem informativa caso esteja commitando arquivos .env permitidos
if git diff --cached --name-only | grep -qE "\.env\.(development|local|test)"; then
  echo "‚ÑπÔ∏è  Commitando arquivo de configura√ß√£o de desenvolvimento (permitido)"
fi

# Verificar se h√° arquivos de credenciais
if git diff --cached --name-only | grep -qE "(credentials|secrets|\.key|\.pem)"; then
  echo "‚ö†Ô∏è  AVISO: Arquivos que podem conter credenciais detectados"
  echo "Verifique se n√£o h√° informa√ß√µes sens√≠veis sendo commitadas"
  # No Windows, n√£o podemos fazer prompt interativo facilmente
  # ent√£o apenas avisamos
fi

# Verificar se node_modules est√° sendo commitado
if git diff --cached --name-only | grep -q "node_modules"; then
  echo "‚ùå ERRO: Tentativa de commitar node_modules/"
  echo "node_modules/ deve estar no .gitignore"
  exit 1
fi

# Verificar se dist est√° sendo commitado
if git diff --cached --name-only | grep -q "dist/"; then
  echo "‚ùå ERRO: Tentativa de commitar arquivos de build (dist/)"
  echo "Arquivos de build devem estar no .gitignore"
  exit 1
fi

echo "‚úÖ Valida√ß√µes de seguran√ßa passaram"

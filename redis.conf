# Redis Configuration for Email Gateway
# TASK 3.2 — Retry/backoff/DLQ e fairness por tenant
#
# Requisitos:
# - AOF everysec: fsync a cada segundo para balancear durabilidade e performance
# - maxmemory-policy noeviction: nunca remover dados, falhar se memória cheia
#
# Esta configuração garante:
# 1. Persistência confiável (AOF com fsync a cada segundo)
# 2. Proteção contra perda de jobs (noeviction)
# 3. Performance adequada para MVP (~40k emails/mês)

################################## NETWORK #####################################

# Bind apenas localhost para desenvolvimento
# TODO: [TASK 3.3] Make bind address configurable via environment variable
# PRODUÇÃO: ajustar para IP interno da VPS ou usar configuração via env vars
# para suportar ambientes containerizados/K8s (ex: REDIS_BIND_ADDRESS)
bind 127.0.0.1

# Porta padrão
port 6379

# Timeout de conexão idle (0 = disabled)
timeout 300

# TCP keepalive
tcp-keepalive 300

################################# GENERAL ######################################

# Executar como daemon (0 = não)
daemonize no

# PID file (quando daemon)
pidfile /var/run/redis_6379.pid

# Log level: debug, verbose, notice, warning
loglevel notice

# Log file (vazio = stdout)
logfile ""

# Número de databases
databases 16

################################ SNAPSHOTTING  #################################

# TASK 8.2: RDB snapshots habilitados para dupla proteção
# Snapshots automáticos em intervalos configurados
save 900 1    # Salvar se pelo menos 1 chave mudou em 900 segundos (15 min)
save 300 10   # Salvar se pelo menos 10 chaves mudaram em 300 segundos (5 min)
save 60 10000 # Salvar se pelo menos 10000 chaves mudaram em 60 segundos (1 min)

# Configurações de RDB
stop-writes-on-bgsave-error yes  # Parar writes se snapshot falhar
rdbcompression yes               # Comprimir snapshots
rdbchecksum yes                  # Verificar checksums
dbfilename dump.rdb              # Nome do arquivo RDB
dir ./                          # Diretório para arquivos de dados

############################# APPEND ONLY MODE #################################

# TASK 3.2: AOF habilitado para persistência durável
appendonly yes

# Nome do arquivo AOF
appendfilename "appendonly.aof"

# TASK 3.2: fsync policy = everysec
# - always: fsync a cada write (máxima durabilidade, menor performance)
# - everysec: fsync a cada segundo (balanceado - RECOMENDADO)
# - no: nunca fsync, deixa SO decidir (máxima performance, menor durabilidade)
appendfsync everysec

# Não fazer fsync durante rewrite (evita I/O block)
no-appendfsync-on-rewrite no

# Auto-rewrite do AOF quando crescer 100% e for maior que 64mb
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb

# Carregar AOF truncado (última operação incompleta)
aof-load-truncated yes

# Usar RDB-AOF híbrido para rewrite mais rápido
aof-use-rdb-preamble yes

################################## MEMORY ######################################

# TASK 3.2: Limite de memória (512MB padrão)
# TODO: [TASK 3.3] Make maxmemory configurable via environment variable
# PRODUÇÃO: ajustar conforme capacidade da VPS e ambiente de deployment
# Considerar usar REDIS_MAXMEMORY env var para flexibilidade
maxmemory 512mb

# TASK 3.2: Política de evicção = noeviction
# CRÍTICO: Retorna erro ao invés de remover chaves
# Garante que jobs NÃO sejam perdidos se memória encher
#
# Opções disponíveis:
# - volatile-lru: remove chaves com TTL usando LRU
# - allkeys-lru: remove qualquer chave usando LRU
# - volatile-lfu: remove chaves com TTL usando LFU
# - allkeys-lfu: remove qualquer chave usando LFU
# - volatile-random: remove chaves com TTL aleatoriamente
# - allkeys-random: remove qualquer chave aleatoriamente
# - volatile-ttl: remove chaves com TTL menor
# - noeviction: retorna erro, não remove nada (TASK 3.2)
maxmemory-policy noeviction

# Samples para algoritmos LRU/LFU
maxmemory-samples 5

############################# LAZY FREEING ####################################

# Deletar assincronamente (evita bloqueios)
lazyfree-lazy-eviction no
lazyfree-lazy-expire no
lazyfree-lazy-server-del no
replica-lazy-flush no

################################ THREADED I/O #################################

# Threads de I/O (0 = auto, baseado em cores)
# Melhora performance em alta concorrência
# PRODUÇÃO: ajustar conforme cores disponíveis (recomendado: 2-4)
io-threads 2
io-threads-do-reads yes

############################### ADVANCED CONFIG ###############################

# Hash table resize
hash-max-ziplist-entries 512
hash-max-ziplist-value 64

# List compression
list-max-ziplist-size -2
list-compress-depth 0

# Set optimization
set-max-intset-entries 512

# Sorted set optimization
zset-max-ziplist-entries 128
zset-max-ziplist-value 64

# HyperLogLog optimization
hll-sparse-max-bytes 3000

# Streams optimization
stream-node-max-bytes 4096
stream-node-max-entries 100

# Rehashing
activerehashing yes

# Client output buffer limits
# Normal clients
client-output-buffer-limit normal 0 0 0
# Pub/Sub clients
client-output-buffer-limit pubsub 32mb 8mb 60
# Replicas
client-output-buffer-limit replica 256mb 64mb 60

# Frequency de Hz (trades CPU por performance)
hz 10

# Habilitar rehashing incremental
dynamic-hz yes

# AOF rewrite incremental fsync
aof-rewrite-incremental-fsync yes

# RDB save incremental fsync
rdb-save-incremental-fsync yes

################################## SLOWLOG #####################################

# Log de comandos lentos (microsegundos)
slowlog-log-slower-than 10000

# Tamanho do slowlog
slowlog-max-len 128

################################ LATENCY MONITOR ###############################

# Threshold de latência (ms) para monitoramento
latency-monitor-threshold 100

########################### EVENT NOTIFICATION #################################

# Notificações de eventos (desabilitado por padrão)
# Para habilitar notificações de expiração/eviction:
# notify-keyspace-events Ex
notify-keyspace-events ""

############################### GOPHER SERVER ##################################

# Desabilitar servidor Gopher (protocolo antigo)
# gopher-enabled no

############################### ADVANCED CONFIG ###############################

# Habilitar protected mode (requer senha ou bind específico)
protected-mode yes

# Número máximo de clientes conectados
maxclients 10000

################################## SECURITY ####################################

# IMPORTANTE: Em produção, definir senha forte
# requirepass ${REDIS_PASSWORD:-default-password-change-in-production}

# Renomear comandos perigosos (opcional)
# rename-command FLUSHDB ""
# rename-command FLUSHALL ""
# rename-command CONFIG ""
# rename-command SHUTDOWN ""

################################### CLIENTS ####################################

# Timeout de cliente idle (0 = disabled)
# TASK 3.2: 300s para evitar conexões antigas
timeout 300

# TCP backlog (SO queue size)
tcp-backlog 511

################################### LIMITS #####################################

# File descriptors (ulimit -n)
# Sistema deve suportar: maxclients + 32
# Exemplo: 10000 clientes + 32 = 10032 fd

################################### MONITORING #################################

# Habilitar comandos de info
# PRODUÇÃO: útil para monitoramento e alertas
# INFO server
# INFO memory
# INFO stats
# INFO replication
# INFO cpu
# INFO keyspace
# INFO persistence

################################## INCLUDES ####################################

# Incluir configs adicionais (se necessário)
# include /path/to/local.conf
# include /path/to/other.conf

################################## END #########################################
# Configuração baseada nos requisitos de TASK 3.2
# Versão: 1.0
# Última atualização: 2025-10-19

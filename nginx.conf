# TASK 8.2 - Hardening e runbooks de operação
# Configuração de produção com TLS, headers de segurança, rate limiting e IP allowlist

user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format melhorado
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time" '
                    'ssl_protocol="$ssl_protocol" ssl_cipher="$ssl_cipher"';

    access_log /var/log/nginx/access.log main;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;

    # Security: Hide nginx version
    server_tokens off;

    # Security: Timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;

    upstream api_backend {
        server api:3000;
        # Adicionar mais servidores conforme necessário para load balancing
        # server api2:3000;
        keepalive 32;
    }

    # Rate limiting zones aprimoradas
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=health:10m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=dashboard:10m rate=20r/m;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    limit_conn_zone $server_name zone=conn_limit_per_server:10m;

    # IP Allowlist (configurar via env vars em produção)
    # map $remote_addr $allowed_ip {
    #     default 0;
    #     127.0.0.1 1;
    #     # Adicionar IPs permitidos aqui
    #     # 192.168.1.0/24 1;
    # }

    # Gzip compression aprimorado
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        image/svg+xml;

    # Security headers globais
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self'; frame-ancestors 'none';" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Servidor HTTP (redirect para HTTPS em produção)
    server {
        listen 80;
        server_name _;
        
        # Redirect HTTP to HTTPS
        return 301 https://$host$request_uri;

        # Connection limiting
        limit_conn conn_limit_per_ip 10;
        limit_conn conn_limit_per_server 1000;

        # Bloquear user agents suspeitos
        if ($http_user_agent ~* (bot|crawler|spider|scraper)) {
            return 403;
        }

        # Bloquear métodos HTTP não permitidos
        if ($request_method !~ ^(GET|POST|PUT|DELETE|OPTIONS|HEAD)$) {
            return 405;
        }

        # Health check endpoint (rate limiting mais restritivo)
        location /health/healthz {
            limit_req zone=health burst=5 nodelay;
            limit_req_status 429;
            
            proxy_pass http://api_backend/v1/health/healthz;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeout rápido para health checks
            proxy_connect_timeout 2s;
            proxy_send_timeout 2s;
            proxy_read_timeout 2s;
            
            # Não cachear health checks
            proxy_cache_bypass 1;
            proxy_no_cache 1;
        }

        # Readiness check endpoint (rate limiting restritivo)
        location /health/readyz {
            limit_req zone=health burst=5 nodelay;
            limit_req_status 429;
            
            proxy_pass http://api_backend/v1/health/readyz;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeout mais longo para readiness checks
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 10s;
            
            # Não cachear readiness checks
            proxy_cache_bypass 1;
            proxy_no_cache 1;
        }

        # API endpoints (rate limiting aprimorado)
        location /v1/ {
            limit_req zone=api burst=20 nodelay;
            limit_req_status 429;
            
            proxy_pass http://api_backend/v1/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts padrão
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }

        # Dashboard (rate limiting mais restritivo)
        location /dashboard/ {
            limit_req zone=dashboard burst=10 nodelay;
            limit_req_status 429;
            
            proxy_pass http://api_backend/v1/dashboard/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Bloquear acesso a arquivos sensíveis
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Bloquear acesso a arquivos de backup
        location ~* \.(bak|backup|old|orig|save|swp|tmp)$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Root redirect
        location / {
            return 301 /v1/health/healthz;
        }

        # Error pages customizadas
        error_page 404 /404.html;
        error_page 429 /429.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /usr/share/nginx/html;
        }
        
        location = /429.html {
            root /usr/share/nginx/html;
        }
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # Servidor HTTPS (produção)
    server {
        listen 443 ssl http2;
        server_name _;

        # SSL/TLS Configuration
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        
        # SSL Security
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;
        
        # OCSP Stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        
        # Connection limiting
        limit_conn conn_limit_per_ip 10;
        limit_conn conn_limit_per_server 1000;

        # Bloquear user agents suspeitos
        if ($http_user_agent ~* (bot|crawler|spider|scraper)) {
            return 403;
        }

        # Bloquear métodos HTTP não permitidos
        if ($request_method !~ ^(GET|POST|PUT|DELETE|OPTIONS|HEAD)$) {
            return 405;
        }

        # Health check endpoint
        location /health/healthz {
            limit_req zone=health burst=5 nodelay;
            limit_req_status 429;
            
            proxy_pass http://api_backend/v1/health/healthz;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 2s;
            proxy_send_timeout 2s;
            proxy_read_timeout 2s;
            
            proxy_cache_bypass 1;
            proxy_no_cache 1;
        }

        # Readiness check endpoint
        location /health/readyz {
            limit_req zone=health burst=5 nodelay;
            limit_req_status 429;
            
            proxy_pass http://api_backend/v1/health/readyz;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 10s;
            
            proxy_cache_bypass 1;
            proxy_no_cache 1;
        }

        # API endpoints
        location /v1/ {
            limit_req zone=api burst=20 nodelay;
            limit_req_status 429;
            
            proxy_pass http://api_backend/v1/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }

        # Dashboard
        location /dashboard/ {
            limit_req zone=dashboard burst=10 nodelay;
            limit_req_status 429;
            
            proxy_pass http://api_backend/v1/dashboard/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Bloquear acesso a arquivos sensíveis
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Bloquear acesso a arquivos de backup
        location ~* \.(bak|backup|old|orig|save|swp|tmp)$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Root redirect
        location / {
            return 301 /v1/health/healthz;
        }

        # Error pages customizadas
        error_page 404 /404.html;
        error_page 429 /429.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /usr/share/nginx/html;
        }
        
        location = /429.html {
            root /usr/share/nginx/html;
        }
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

}
